{
	"info": {
		"_postman_id": "dcbdbf1a-eee3-4da6-a23a-6c3a377045a8",
		"name": "GoREST API Update User Details",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Positive Senarios",
			"item": [
				{
					"name": "SignUp user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    ",
									"    const{data} = pm.response.json()",
									"    pm.environment.set('userID', data.id)",
									"});",
									"",
									"pm.test(\"Verify User Data\", function () {",
									"    // Request body is parsed from string to json",
									"    const request = JSON.parse(pm.request.body.raw)",
									"    // Response is parsed into json",
									"    const response = pm.response.json()",
									"    // Assert user name,email,gender and status",
									"    pm.expect(request.email).to.eql(response.data.email)",
									"    pm.expect(response.data.name).to.eql(response.data.name)",
									"    pm.expect(response.data.gender).to.eql(response.data.gender)",
									"    pm.expect(response.data.status).to.eql(response.data.status)",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "ff0cf79492ccbc1eb03875472d60e34f7f59770d9a19225b1184c00937606f02",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"gender\": \"female\",\n    \"status\": \"active\"\n    \n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v1/users/",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v1",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify User Data\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.data.email).to.exist",
									"    pm.expect(response.data.name).to.exist",
									"    pm.expect(response.data.gender).to.exist",
									"    pm.expect(response.data.status).to.exist",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://gorest.co.in/public/v1/users/{{userID}}",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v1",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user gender using PATCH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"});",
									"pm.test(\"Verify updated gender\", function () {",
									"    const response = pm.response.json()",
									"    pm.expect(response.data.gender).to.eql(\"male\")",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "ff0cf79492ccbc1eb03875472d60e34f7f59770d9a19225b1184c00937606f02",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{BearerToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"gender\": \"male\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v1/users/{{userID}}",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v1",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get updated details of user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify User data exists\", function () {",
									"    var response = pm.response.json()",
									"    pm.expect(response.data.email).to.exist",
									"    pm.expect(response.data.name).to.exist",
									"    pm.expect(response.data.gender).to.exist",
									"    pm.expect(response.data.status).to.exist",
									"",
									"    });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v1/users/{{userID}}",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v1",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user details using PUT",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Verify User Data\", function () {",
									"    const request = JSON.parse(pm.request.body.raw)",
									"    var response = pm.response.json()",
									"    pm.expect(request.email).to.eql(response.data.email)",
									"    pm.expect(request.name).to.eql(response.data.name)",
									"    pm.expect(request.gender).to.eql(response.data.gender)",
									"    pm.expect(request.status).to.eql(response.data.status)",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "ff0cf79492ccbc1eb03875472d60e34f7f59770d9a19225b1184c00937606f02",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"gender\": \"female\",\n    \"status\": \"inactive\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v1/users/{{userID}}",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v1",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative Scenario",
			"item": [
				{
					"name": "Update User with existing email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"",
									"pm.test(\"Verify error message\", function () {",
									"    var response = JSON.parse(responseBody);",
									"    pm.expect(response.data[0].message).to.eql(\"has already been taken\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "ff0cf79492ccbc1eb03875472d60e34f7f59770d9a19225b1184c00937606f02",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "{{BearerToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"abc@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gorest.co.in/public/v1/users/{{userID}}",
							"protocol": "https",
							"host": [
								"gorest",
								"co",
								"in"
							],
							"path": [
								"public",
								"v1",
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "ff0cf79492ccbc1eb03875472d60e34f7f59770d9a19225b1184c00937606f02",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}